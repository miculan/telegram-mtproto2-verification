(*
 * MTProto 2.0: Cloud chats
 *
 * Model for the protocol used to exchange client-server messages (cloud chats)
 * using the long-term keys shared between a client and Telegram's server.
 *
 * See: https://core.telegram.org/mtproto/description
 *)

query sk: PrivKey, k: AuthKey, nk: Nonce, sID: Principal;
  attacker(secretAuthMsg1)
  ==> event(CompromisedNonce(nk))
  ||  event(ClientChecksDHParameters(false))
  ||  event(PostCompromisedAuthKey(k))
  ||  event(ForgedServerIdentity(sID)).
(* ✖︎ Expected result: false *)

query sk: PrivKey, k: AuthKey, nk: Nonce, sID: Principal;
  attacker(secretAuthMsg1)
  ==> event(CompromisedRSAKey(sk))
  ||  event(ClientChecksDHParameters(false))
  ||  event(PostCompromisedAuthKey(k))
  ||  event(ForgedServerIdentity(sID)).
(* ✖︎ Expected result: false *)

query sk: PrivKey, k: AuthKey, nk: Nonce, sID: Principal;
  attacker(secretAuthMsg1)
  ==> event(CompromisedRSAKey(sk))
  ||  event(CompromisedNonce(nk))
  ||  event(PostCompromisedAuthKey(k))
  ||  event(ForgedServerIdentity(sID)).
(* Expected result: cannot be proved *)

query sk: PrivKey, k: AuthKey, nk: Nonce, sID: Principal;
  attacker(secretAuthMsg1)
  ==> event(CompromisedRSAKey(sk))
  ||  event(CompromisedNonce(nk))
  ||  event(ClientChecksDHParameters(false))
  ||  event(ForgedServerIdentity(sID)).
(* ✖︎ Expected result: false *)

query sk: PrivKey, k: AuthKey, nk: Nonce, sID: Principal;
  attacker(secretAuthMsg1)
  ==> event(CompromisedRSAKey(sk))
  ||  event(CompromisedNonce(nk))
  ||  event(ClientChecksDHParameters(false))
  ||  event(PostCompromisedAuthKey(k)).
(* ✖︎ Expected result: false *)

query attacker(secretAuthMsg1) ==> event(ClientChecksDHParameters(false)).
(* ✖︎ Expected result: false *)
(* NOTE: this is true when the protocol is run without leaking processes. *)

query attacker(secretAuthMsg2) ==> event(ClientChecksDHParameters(false)).
(* ✖︎ Expected result: false *)

query attacker(secretAuthMsg3) ==> event(ClientChecksDHParameters(false)).
(* ✖︎ Expected result: false *)


(* Main *)

process
  (0
    | !GenGoodDHParameters()
    | !GenBadDHParameters()
    | !GenRandomServerNonce()
    | !GenFixedServerNonce()
    | !GenRandomNk()
    | !GenPredictableNk()
    | !RegisterRSAKey(Server)
    | !ServerAuth(Server)
    | !ClientAuth(Server, true)
    | !ServerCloudChat(Server)
    | !ClientCloudChat(Server)
    | !ForgeServerIdentity()
    | !LeakRSAKey()
    | !PostCompromiseRSAKey()
    | !LeakNk()
    | !PostCompromiseNk()
    | !PostCompromiseAuthKey()
  )

