(*
 * MTProto 2.0: Rekeying
 *
 * Model for the protocol used for updating the session keys of secret chats.
 *
 * See: https://core.telegram.org/api/end-to-end/pfs

 * Expected time to run this script:
 *)

query iPID, rPID: ProcessID, i: ChatID, I, R: Principal, k: SessionKey, m: bitstring;
  inj-event(ResponderReceivesMsgWithNewKey(rPID,  i,    Alice, R, k, m))
  ==> inj-event(InitiatorSendsMsgWithNewKey(iPID, i, R, Alice, k, m)).
(* ✖︎ Expected result: false *)

query iPID, rPID: ProcessID, i: ChatID, I, R: Principal, k: SessionKey, m: bitstring;
  inj-event(ResponderReceivesMsgWithNewKey(rPID,  i, Alice, R, k, m))
  ==> inj-event(InitiatorSendsMsgWithNewKey(iPID, i, Alice, R, k, m)).
(* ✖︎ Expected result: false *)

(* Main *)
let Init() =
  new k: SessionKey;
  insert SecretChatClientTable(Alice, Bob, STRONG, GOOD, k);
  (* Weak parameters cause key fingerprint mismatches *)
  insert SecretChatClientTable(Alice, Bob, WEAK, GOOD, k);
  insert SecretChatClientTable(Alice, Bob, STRONG, BAD, k);
  new authKey1: AuthKey;
  new authKey2: AuthKey;
  insert AuthKeyClientTable(Alice, Server, authKey1);
  insert AuthKeyClientTable(Bob, Server, authKey2);
  0.

process
  (0
    | Init()
    | !RekeyingInitiator(Server)
    | !RekeyingResponder(Server)
  )

