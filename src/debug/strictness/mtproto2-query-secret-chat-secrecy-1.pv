(* set preciseActions = true. *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatSessionKey(k)).
(* ✖︎ Expected result: false *)

query k: SessionKey, m: bitstring, a,b: Z, X,I,R: Principal, i: ChatID;
  event(ClientSendsSecretChatMsg(i, X, I, R, k, m))
  && attacker(m)
  ==> event(AttackerRegisteredSessionKey(k, X))
  ||  event(ClientChecksDHConfig(i, X, false))
  ||  event(OutOfBandKeyComparisonSkipped(a, X, k))
  ||  event(RevealedSecretChatInitiatorEphemeralKey(a))
  ||  event(RevealedSecretChatResponderEphemeralKey(b))
  ||  event(RevealedSecretChatSessionKey(k))
  ||  event(PostCompromisedSecretChatInitiatorEphemeralKey(a))
  ||  event(PostCompromisedSecretChatResponderEphemeralKey(b)).
(* ✖︎ Expected result: false *)


(* Main *)

let Init() =
  new k1: AuthKey;
  new k2: AuthKey;
  insert AuthKeyClientTable(Alice, Server, k1);
  insert AuthKeyClientTable(Bob, Server, k2);
  0.

process
  let allowWeakDiffieHellman = true in
  (0
    | !Init()
    | !RegisterSessionKey()
    | !SecretChatInitiator(Server, allowWeakDiffieHellman)
    | !SecretChatResponder(Server, allowWeakDiffieHellman)
    | !PerformOutOfBandKeyComparison()
    | !SkipOutOfBandKeyComparison()
    | !SecretChatSend(Server)
    | !SecretChatReceive(Server)
    | !RevealSecretChatSessionKey()
    | !RevealSecretChatInitiatorEphemeralKey()
    | !RevealSecretChatResponderEphemeralKey()
    | !PostCompromiseSecretChatSessionKey()
    | !PostCompromiseSecretChatInitiatorEphemeralKey()
    | !PostCompromiseSecretChatResponderEphemeralKey()
  )

