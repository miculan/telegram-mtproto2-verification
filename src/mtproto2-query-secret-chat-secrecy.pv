(*
 * MTProto 2.0: Secret Chats
 *
 * Model for the protocol used to in secret chats.
 *
 * See: https://core.telegram.org/api/end-to-end
 *
 * Expected time to run this script: ~30s
 *)

(*
 * If the attacker gets to know a message of a secret chat, then the clients
 * did not perform the out-of-band check of their session keys or they did not
 * check the received Diffie-Hellman parameters. In either case, they did not
 * comply with Telegram's specification.
 *)
query xPID: ProcessID, X: Principal, k: SessionKey;
  attacker(new iSecretChatText)
  ==> event(OutOfBandKeyComparisonSkipped(xPID, X, k))
  || event(ClientChecksDHConfig(xPID, X, false)).
(* ✔︎ Expected result: true *)

query iPID: ProcessID, rPID: ProcessID, I: Principal, R: Principal, k: SessionKey;
  attacker(new iSecretChatText)
  ==> (event(OutOfBandKeyComparisonSkipped(iPID, I, k)) && event(OutOfBandKeyComparisonSkipped(rPID, R, k)))
  ||  (event(ResponderChecksDHConfig(rPID, I, R, false)) || event(InitiatorChecksDHConfig(iPID, I, R, false))).
(* ✔︎ Expected result: true *)

query iPID: ProcessID, rPID: ProcessID, I: Principal, R: Principal, k: SessionKey;
  attacker(new iSecretChatText)
  ==> (event(OutOfBandKeyComparisonSkipped(iPID, I, k)) && event(OutOfBandKeyComparisonSkipped(rPID, R, k)))
  ||   event(InitiatorChecksDHConfig(iPID, I, R, false)).
(* ✔︎ Expected result: true *)

query iPID: ProcessID, rPID: ProcessID, I: Principal, R: Principal, k: SessionKey;
  attacker(new rSecretChatText)
  ==> (event(OutOfBandKeyComparisonSkipped(iPID, I, k)) && event(OutOfBandKeyComparisonSkipped(rPID, R, k)))
  ||   event(ResponderChecksDHConfig(rPID, I, R, false)).
(* ✔︎ Expected result: true *)

(* Main *)

let Init() =
  (*
   * Authorization keys are not used in our model of the secret chat protocol,
   * because we include the server in the attacker's model. The following,
   * however, is needed for the chat processes to proceed.
   *)
  new k1: AuthKey;
  new k2: AuthKey;
  insert AuthKeyClientTable(Alice, Server, k1);
  insert AuthKeyClientTable(Bob, Server, k2);
  0.

process
  (0
    | !Init()
    | !SecretChatInitiator(Server, true)
    | !SecretChatResponder(Server, true)
    | !PerformOutOfBandKeyComparison()
    | !SkipOutOfBandKeyComparison()
  )

